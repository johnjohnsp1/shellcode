
#include <windows.h>
#include <stdio.h>

//
// 104 bytes LoadLibraryA code for windows 64
//
// Copyright (c) 2014 Kevin Devine
//
// cl load64_test.cpp
//
// generated with: xxd -i load64.bin

unsigned char code[] = {
  0x53, 0x56, 0x57, 0x55, 0x4c, 0x8b, 0xfc, 0x48, 0x83, 0xe4, 0xf0, 0x48,
  0x83, 0xec, 0x28, 0xeb, 0x52, 0x6a, 0x60, 0x59, 0x65, 0x48, 0x8b, 0x31,
  0x8b, 0x76, 0x18, 0x8b, 0x76, 0x10, 0xad, 0x8b, 0x30, 0x8b, 0x7e, 0x30,
  0x03, 0x4f, 0x3c, 0x8b, 0x5c, 0x39, 0x28, 0x8b, 0x74, 0x3b, 0x20, 0x03,
  0xf7, 0x8b, 0x4c, 0x3b, 0x24, 0x03, 0xcf, 0x99, 0x0f, 0xb7, 0x2c, 0x51,
  0xff, 0xc2, 0xad, 0x81, 0x3c, 0x38, 0x4c, 0x6f, 0x61, 0x64, 0x75, 0xf0,
  0x80, 0x7c, 0x38, 0x0b, 0x41, 0x75, 0xe9, 0x8b, 0x74, 0x3b, 0x1c, 0x03,
  0xf7, 0x03, 0x3c, 0xae, 0x59, 0xff, 0xd7, 0x49, 0x8b, 0xe7, 0x5d, 0x5f,
  0x5e, 0x5b, 0xc3, 0xe8, 0xa9, 0xff, 0xff, 0xff };

int main (int argc, char* argv[]) {
  
  puts ("\nCopyright (c) 2014 Kevin Devine\n");
  
  if (argc != 2) {
    printf ("\nUsage: load64_test <DLL name/path>\n");
    return 0;
  }
  
  char *path = argv[1];
  size_t path_len = strlen (path);
  
  if (path_len > MAX_PATH) {
    printf ("\nPath exceeds MAX_PATH limit of %i bytes", MAX_PATH);
    return 0;
  }
  
  void *exec = VirtualAlloc(0, sizeof (code) + MAX_PATH, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
  memcpy (exec, code, sizeof (code));
  strcat ((char*)exec, path);
  printf ("\nAssembly : %i\nFinal Size : %i", 
    sizeof (code), 
    path_len + sizeof (code));
  //DebugBreak();
  printf ("\nBase Address returned : 0x%016llX\n", ((__int64(*)())exec)());
  
  VirtualFree (exec, 0, MEM_RELEASE);
  return 0;
}

